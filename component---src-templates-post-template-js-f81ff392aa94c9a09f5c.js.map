{"version":3,"file":"component---src-templates-post-template-js-f81ff392aa94c9a09f5c.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/item-post.js","webpack://gatsby-starter-blog/./src/components/title.js","webpack://gatsby-starter-blog/./src/components/tag.js","webpack://gatsby-starter-blog/./src/components/main-image.js","webpack://gatsby-starter-blog/./src/services/get-date.js","webpack://gatsby-starter-blog/./src/components/author-date.js","webpack://gatsby-starter-blog/./src/components/header.js","webpack://gatsby-starter-blog/./src/components/block-render.js","webpack://gatsby-starter-blog/./src/components/block-richtext.js","webpack://gatsby-starter-blog/./src/components/block-image.js","webpack://gatsby-starter-blog/./src/hooks/useObserver.js","webpack://gatsby-starter-blog/./src/components/item-table-content.js","webpack://gatsby-starter-blog/./src/components/table-content.js","webpack://gatsby-starter-blog/./src/components/last-posts.js","webpack://gatsby-starter-blog/./src/templates/post-template.js"],"sourcesContent":["/*MODULES*/\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport { Link } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\nconst ItemPost = ({ post }) => {\r\n  return (\r\n    <div className=\"item-post\">\r\n      <Link to={`/${post.slug}`}>\r\n        <GatsbyImage\r\n          class=\"image-item-post\"\r\n          image={getImage(\r\n            post.thumbnail.localFile.childImageSharp.gatsbyImageData\r\n          )}\r\n          alt={post.thumbnail.alternativeText}\r\n        />\r\n        <div className=\"container-text\">\r\n          <h4>{post.title}</h4>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemPost\r\n","import React from \"react\";\r\n\r\nconst Title = ({ title }) => {\r\n  return <h1 className=\"title\">{title}</h1>;\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"../assets/css/tag.css\";\r\n\r\nconst Tag = ({ tag }) => {\r\n  return (\r\n    <div className=\"container-tag background-color\">\r\n      <p>{tag.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nconst MainImage = ({ image }) => {\r\n  //console.log(image);\r\n  return (\r\n    <GatsbyImage\r\n      className=\"main-image\"\r\n      image={getImage(image.localFile.childImageSharp.gatsbyImageData)}\r\n      alt={image?.alternativeText}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainImage;\r\n","const getDate = (date) => {\r\n  const dateParse = new Date(date).toLocaleDateString();\r\n  return dateParse;\r\n};\r\n\r\nexport default getDate;\r\n","/*MODULES*/\r\nimport React from \"react\";\r\nimport getDate from \"../services/get-date\";\r\n/*CSS*/\r\nimport \"../assets/css/author-date.css\";\r\n\r\nconst AuthorDate = ({ author, publishedAt }) => {\r\n  return (\r\n    <div className=\"container-detail\">\r\n      <span className=\"date\">Posted on {getDate(publishedAt)}</span>\r\n      <span className=\"author\">by {author.name}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorDate;\r\n","/*MODULES*/\r\nimport React from \"react\";\r\n/*COMPONENTS*/\r\nimport Title from \"./title\";\r\nimport Tag from \"./tag\";\r\nimport MainImage from \"./main-image\";\r\n/*CSS*/\r\nimport \"../assets/css/header.css\";\r\nimport AuthorDate from \"./author-date\";\r\n\r\nconst Header = ({ title, image, tags, author, publishedAt }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header-content\">\r\n        <div className=\"container-tags\">\r\n          {tags.name ? (\r\n            <Tag tag={tags} />\r\n          ) : (\r\n            tags.map((tag, index) => {\r\n              return <Tag tag={tag} key={index} />;\r\n            })\r\n          )}\r\n        </div>\r\n        <Title title={title} />\r\n        <AuthorDate author={author} publishedAt={publishedAt} />\r\n      </div>\r\n      <MainImage image={image} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/*MODULES*/\r\nimport React from \"react\";\r\n/*COMPONENTS*/\r\nimport Image from \"./block-image\";\r\nimport RichText from \"./block-richtext\";\r\n\r\nconst ComponentMap = {\r\n  \"shared.rich-text\": RichText,\r\n  \"shared.media\": Image,\r\n};\r\n\r\nconst Block = ({ block }) => {\r\n  const Component = ComponentMap[block.strapi_component];\r\n\r\n  if (!Component) {\r\n    return null;\r\n  }\r\n\r\n  return <Component data={block} />;\r\n};\r\n\r\nconst BlockRender = ({ blocks }) => {\r\n  return (\r\n    <>\r\n      {blocks.map((block, index) => {\r\n        return <Block key={index} block={block} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlockRender;\r\n","import React from \"react\";\r\n\r\nconst RichText = ({ data }) => {\r\n \r\n  return (\r\n    <section\r\n      dangerouslySetInnerHTML={{\r\n        __html: data.body.data.childMarkdownRemark.html,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RichText;\r\n","/*MODULES*/\r\nimport React from \"react\";\r\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\";\r\n/*COMPONENTS*/\r\n\r\n/*CSS*/\r\nimport \"../assets/css/block-image.css\";\r\n\r\nconst Image = ({ data }) => {\r\n  return (\r\n    <div className=\"image-container\">\r\n      <GatsbyImage\r\n        className=\"image-content\"\r\n        image={getImage(data.image.localFile.childImageSharp.gatsbyImageData)}\r\n        alt={data.alternativeText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","/*MODULES*/\r\nimport React from \"react\";\r\n\r\nconst options = {\r\n  rootMargin: \"-80px 0px -200px 0px\",\r\n  threshold: 1,\r\n};\r\n\r\nconst useObserver = (targets, clickInLink) => {\r\n  const observer = React.useRef();\r\n  const [headingsActive, setHeadingsAtctives] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (!clickInLink.click) {\r\n      let snapshot = headingsActive;\r\n      const handlerObserver = (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting && !snapshot.includes(entry.target)) {\r\n            snapshot = [...snapshot, entry.target];\r\n          }\r\n          if (!entry.isIntersecting && snapshot.includes(entry.target)) {\r\n            snapshot = snapshot.filter((el) => el !== entry.target);\r\n          }\r\n        });\r\n        if (snapshot.length !== 0) {\r\n          setHeadingsAtctives(snapshot);\r\n        }\r\n      };\r\n      observer.current?.disconnect();\r\n      observer.current = new IntersectionObserver(handlerObserver, options);\r\n\r\n      const stateElements = Array.from(targets).forEach((el) => {\r\n        observer.current.observe(el);\r\n      });\r\n\r\n      return () => observer.current?.disconnect();\r\n    }\r\n  }, [targets, options]);\r\n\r\n  return headingsActive;\r\n};\r\n\r\nexport { useObserver };\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst ItemTableContent = ({ title, index, headingsActive, handlerClick }) => {\r\n  const [isIntersection, setIstersectiong] = React.useState(false);\r\n  const ref = React.useRef();\r\n  React.useEffect(() => {\r\n    headingsActive.map((el) => el.innerText).includes(ref.current.innerText)\r\n      ? setIstersectiong(true)\r\n      : setIstersectiong(false);\r\n  }, [ref.current, headingsActive]);\r\n\r\n  return (\r\n    <li\r\n      onClick={handlerClick}\r\n      ref={ref}\r\n      key={index}\r\n      className={isIntersection && \"isIntersecting\"}\r\n    >\r\n      <Link to={`#${title.id}`}>{title.text}</Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ItemTableContent;\r\n","import React from \"react\";\r\nimport \"../assets/css/sidebar.css\";\r\nimport { useObserver } from \"../hooks/useObserver\";\r\nimport ItemTableContent from \"./item-table-content\";\r\n\r\nconst TableContent = ({ blocks }) => {\r\n  const tableRef = React.useRef();\r\n  const [titles, setTitles] = React.useState([]);\r\n  const [headings, setHeadings] = React.useState([]);\r\n  const [height, setHeight] = React.useState([]);\r\n  const [clickInLink, setClickInLink] = React.useState({\r\n    click: false,\r\n    element: null,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setHeadings(document.querySelectorAll(\"h2\"));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    /* setTitles(\r\n      ...titles,\r\n      ...blocks\r\n        .map((block) => {\r\n          if (\r\n            block.strapi_component === \"shared.rich-text\" &&\r\n            block.body.data.childMarkdownRemark.tableOfContents.length > 0\r\n          ) {\r\n            return block.body.data.childMarkdownRemark.tableOfContents.match(\r\n              /<a(.*?)<\\/a>/g\r\n            );\r\n          }\r\n        })\r\n        .filter((block) => block !== undefined)\r\n    );*/\r\n    setTitles(\r\n      Array.from(headings).map((heading) => ({\r\n        id: heading.id,\r\n        text: heading.innerText,\r\n      }))\r\n    );\r\n  }, [headings]);\r\n\r\n  const headingsActive = useObserver(headings, clickInLink);\r\n\r\n  React.useEffect(() => {\r\n    if (tableRef.current.scrollHeight > 400 && clickInLink.click === false) {\r\n      const index = Math.min(\r\n        ...headingsActive.map((el) => {\r\n          return Array.from(headings).indexOf(el);\r\n        })\r\n      );\r\n      if (tableRef.current.childNodes.length > 0 && index !== Infinity) {\r\n        let scrollHeight = 0;\r\n        for (let i = 0; i <= index - 1; i++) {\r\n          scrollHeight +=\r\n            tableRef.current.childNodes[i].getBoundingClientRect().height;\r\n        }\r\n        setHeight(scrollHeight);\r\n      }\r\n    }\r\n  }, [tableRef.current, headingsActive, clickInLink]);\r\n\r\n  React.useEffect(() => {\r\n    tableRef.current.scrollTop = height;\r\n  }, [height]);\r\n\r\n  React.useEffect(() => {\r\n    if (clickInLink?.click) {\r\n      const heightWindow = window.screen.availHeight;\r\n      const heightElement = clickInLink.element.getBoundingClientRect().height;\r\n\r\n      const observer = new IntersectionObserver(\r\n        (entries) => {\r\n          const [entry] = entries;\r\n          const timeToWait = setTimeout(() => {\r\n            setClickInLink({ click: false, element: null });\r\n          }, 800);\r\n          if (entry.isIntersecting) {\r\n            clearTimeout(timeToWait);\r\n            setClickInLink({ click: false, element: null });\r\n          }\r\n        },\r\n        {\r\n          root: null,\r\n          rootMargin: `-80px 0px -${heightWindow - 80 + heightElement}px 0px`,\r\n          threshold: 1,\r\n        }\r\n      );\r\n      observer.observe(clickInLink.element);\r\n      return () => observer.unobserve(clickInLink.element);\r\n    }\r\n  }, [clickInLink]);\r\n\r\n  const handlerClick = (e) => {\r\n    if (e.target.matches(\"li\")) {\r\n      return false;\r\n    }\r\n\r\n    const contentElement = e.target.innerText;\r\n\r\n    const [element] = Array.from(headings).filter(\r\n      (el) => el.innerText === contentElement\r\n    );\r\n\r\n    setClickInLink({ click: true, element });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <h3>Table of Contents</h3>\r\n      <div className=\"table-content\" ref={tableRef}>\r\n        {titles?.map((title, index) => (\r\n          <ItemTableContent\r\n            title={title}\r\n            key={index}\r\n            headingsActive={headingsActive}\r\n            handlerClick={handlerClick}\r\n          />\r\n        ))}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default TableContent;\r\n\r\n//\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\nimport \"../assets/css/last-posts.css\";\r\nimport ItemPost from \"./item-post\";\r\n\r\nconst LastPosts = () => {\r\n  const result = useStaticQuery(query);\r\n  const lastPosts = result.allStrapiArticle.nodes;\r\n\r\n  return (\r\n    <div className=\"container-last-posts\">\r\n      <h3>Last Posts</h3>\r\n      <div className=\"container-post\">\r\n        {lastPosts.map((post, index) => {\r\n          return <ItemPost post={post} key={index} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LastPosts;\r\n\r\nconst query = graphql`\r\n  query lastPost {\r\n    allStrapiArticle(limit: 2, sort: { order: DESC, fields: createdAt }) {\r\n      nodes {\r\n        title\r\n        slug\r\n        thumbnail {\r\n          alternativeText\r\n          localFile {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: CONSTRAINED, width: 360, height: 220)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/*MODULES*/\r\nimport React from \"react\";\r\n/*COMPONENTS*/\r\nimport Layout from \"../components/layout\";\r\nimport { graphql } from \"gatsby\";\r\nimport Header from \"../components/header\";\r\nimport BlockRender from \"../components/block-render\";\r\nimport TableContent from \"../components/table-content\";\r\nimport LastPosts from \"../components/last-posts\";\r\nimport Seo from \"../components/seo\";\r\n\r\n\r\nconst postTemplate = ({ data }) => {\r\n  const {\r\n    blocks,\r\n    title,\r\n    description,\r\n    thumbnail,\r\n    category,\r\n    author,\r\n    publishedAt,\r\n  } = data.allStrapiArticle.nodes[0];\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title={title} description={description} />\r\n      <Header\r\n        title={title}\r\n        description={description}\r\n        image={thumbnail}\r\n        tags={category}\r\n        author={author}\r\n        publishedAt={publishedAt}\r\n      />\r\n      <article className=\"full-content\">\r\n        <section className=\"post-content\">\r\n          <BlockRender blocks={blocks} />\r\n          <LastPosts />\r\n        </section>\r\n        <TableContent blocks={blocks} />\r\n      </article>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default postTemplate;\r\n\r\nexport const query = graphql`\r\n  query getAPost($slug: String) {\r\n    allStrapiArticle(filter: { slug: { eq: $slug } }) {\r\n      nodes {\r\n        author {\r\n          name\r\n        }\r\n        category {\r\n          name\r\n        }\r\n        description\r\n        thumbnail {\r\n          alternativeText\r\n          localFile {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 1200, height: 600, layout: CONSTRAINED)\r\n            }\r\n          }\r\n        }\r\n        title\r\n        publishedAt(fromNow: false)\r\n        blocks {\r\n          ... on STRAPI__COMPONENT_SHARED_MEDIA {\r\n            strapi_component\r\n            image {\r\n              alternativeText\r\n              localFile {\r\n                childImageSharp {\r\n                  gatsbyImageData(width: 600, height: 400, layout: CONSTRAINED)\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on STRAPI__COMPONENT_SHARED_RICH_TEXT {\r\n            strapi_component\r\n            body {\r\n              data {\r\n                body\r\n                childMarkdownRemark {\r\n                  html\r\n                  tableOfContents\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["post","className","Link","to","slug","G","class","image","getImage","thumbnail","localFile","childImageSharp","gatsbyImageData","alt","alternativeText","title","tag","name","date","Date","toLocaleDateString","author","publishedAt","getDate","tags","map","index","key","ComponentMap","data","dangerouslySetInnerHTML","__html","body","childMarkdownRemark","html","Block","block","Component","strapi_component","blocks","options","rootMargin","threshold","headingsActive","handlerClick","isIntersection","setIstersectiong","React","ref","el","innerText","includes","current","onClick","id","text","tableRef","titles","setTitles","headings","setHeadings","height","setHeight","clickInLink","setClickInLink","click","element","document","querySelectorAll","Array","from","heading","targets","observer","setHeadingsAtctives","snapshot","handlerObserver","entries","forEach","entry","isIntersecting","target","filter","length","disconnect","IntersectionObserver","observe","useObserver","scrollHeight","Math","min","indexOf","childNodes","Infinity","i","getBoundingClientRect","scrollTop","heightWindow","window","screen","availHeight","heightElement","timeToWait","setTimeout","clearTimeout","root","unobserve","e","matches","contentElement","lastPosts","useStaticQuery","query","allStrapiArticle","nodes","description","category"],"sourceRoot":""}